{"version":3,"file":"sdk.cjs.production.min.js","sources":["../src/enums/ChainId.ts","../src/enums/Rounding.ts","../src/enums/TradeType.ts","../src/enums/KashiAction.ts","../src/enums/Fee.ts","../src/enums/OrderStatus.ts","../src/constants/addresses.ts","../src/constants/kashi.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/constants/index.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePairAddress.ts","../src/functions/sqrt.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../src/types/MultiRouterTypes.ts","../node_modules/regenerator-runtime/runtime.js","../src/types/LimitOrderTypes.ts","../src/entities/eip712.ts","../src/router.ts","../src/utils/MultiRouterMath.ts","../src/limitorder.ts","../src/functions/validateSolidityTypeInstance.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 42161,\n  ARBITRUM_TESTNET = 79377087078960,\n  MOONBEAM_TESTNET = 1287,\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  OKEX = 66,\n  OKEX_TESTNET = 65,\n  CELO = 42220,\n  PALM = 11297108109,\n  PALM_TESTNET = 11297108099\n}\n","export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n","export enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n","export enum KashiAction {\n  ADD_ASSET = 1,\n  REPAY = 2,\n  REMOVE_ASSET = 3,\n  REMOVE_COLLATERAL = 4,\n  BORROW = 5,\n  GET_REPAY_SHARE = 6,\n  GET_REPAY_PART = 7,\n  ACCRUE = 8,\n\n  // Functions that don't need accrue to be called\n  ADD_COLLATERAL = 10,\n  UPDATE_EXCHANGE_RATE = 11,\n\n  // Function on BentoBox\n  BENTO_DEPOSIT = 20,\n  BENTO_WITHDRAW = 21,\n  BENTO_TRANSFER = 22,\n  BENTO_TRANSFER_MULTIPLE = 23,\n  BENTO_SETAPPROVAL = 24,\n\n  // Any external call (except to BentoBox)\n  CALL = 30\n}\n","// Fee - Tiers TBD\nexport enum Fee {\n  DEFAULT = 30\n}\n","export enum OrderStatus {\n  FILLED = 'FILLED',\n  CANCELLED = 'CANCELLED',\n  EXPIRED = 'EXPIRED',\n  PENDING = 'PENDING'\n}\n","import { AddressMap } from '../types'\nimport { ChainId } from '../enums'\n\nexport const USDC_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83'\n}\n\nexport const FACTORY_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  // [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  // Temporarily change the factory address for Conveyor v2 in BSC\n  [ChainId.BSC]: '0x3818eAb6Ca8Bf427222bfACFA706c514145F4104',\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.FANTOM]: '0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MASTERCHEF_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MAKER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const TIMELOCK_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BENTOBOX_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.KOVAN]: '0x9A0D9920D92c178a58D99B455898Df2df22A2eE4',\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const KASHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\n\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\n\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\n\nexport const CHAINLINK_ORACLE_ADDRESS = '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB'\n\nexport const BORING_HELPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ARCHER_ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9917C083FF9FbD29Df1367FBF7F2388A9a202431'\n}\n\nexport const MINICHEF_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287'\n}\n\nexport const WETH9_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\n  [ChainId.AVALANCHE]: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15'\n}\n\nexport const WNATIVE_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: WETH9_ADDRESS[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.MATIC_TESTNET]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  [ChainId.MOONBEAM_TESTNET]: '0xe73763DB808ecCDC0E36bC8E32510ED126910394',\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71'\n}\n\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d'\n}\n\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n}\n\nexport const ZAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2'\n}\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955'\n}\n\nexport const MULTICALL2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ARBITRUM]: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F'\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\n// Functions that need accrue to be called\nexport const ACTION_ADD_ASSET = 1\nexport const ACTION_REPAY = 2\nexport const ACTION_REMOVE_ASSET = 3\nexport const ACTION_REMOVE_COLLATERAL = 4\nexport const ACTION_BORROW = 5\nexport const ACTION_GET_REPAY_SHARE = 6\nexport const ACTION_GET_REPAY_PART = 7\nexport const ACTION_ACCRUE = 8\n\n// Functions that don't need accrue to be called\nexport const ACTION_ADD_COLLATERAL = 10\nexport const ACTION_UPDATE_EXCHANGE_RATE = 11\n\n// Function on BentoBox\nexport const ACTION_BENTO_DEPOSIT = 20\nexport const ACTION_BENTO_WITHDRAW = 21\nexport const ACTION_BENTO_TRANSFER = 22\nexport const ACTION_BENTO_TRANSFER_MULTIPLE = 23\nexport const ACTION_BENTO_SETAPPROVAL = 24\n\n// Any external call (except to BentoBox)\nexport const ACTION_CALL = 30\n\nexport const MINIMUM_TARGET_UTILIZATION = BigNumber.from('700000000000000000') // 70%\n\nexport const MAXIMUM_TARGET_UTILIZATION = BigNumber.from('800000000000000000') // 80%\n\nexport const UTILIZATION_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION_MINUS_MAX = FULL_UTILIZATION.sub(MAXIMUM_TARGET_UTILIZATION)\n\nexport const STARTING_INTEREST_PER_YEAR = BigNumber.from(317097920)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1% APR\n\nexport const MINIMUM_INTEREST_PER_YEAR = BigNumber.from(79274480)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 0.25% APR\n\nexport const MAXIMUM_INTEREST_PER_YEAR = BigNumber.from(317097920000)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1000% APR\n\nexport const INTEREST_ELASTICITY = BigNumber.from('28800000000000000000000000000000000000000') // Half or double in 28800 seconds (8 hours) if linear\n\nexport const FACTOR_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const PROTOCOL_FEE = BigNumber.from('10000') // 10%\n\nexport const PROTOCOL_FEE_DIVISOR = BigNumber.from('100000')\n","import { Currency } from './Currency'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class AbstractCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { AbstractCurrency } from './AbstractCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends AbstractCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n","import { AbstractCurrency } from './AbstractCurrency'\nimport { ChainId } from '../enums'\nimport { Currency } from './Currency'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends AbstractCurrency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(chainId, decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n","import { USDC_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\n\nimport { ChainId } from '../enums'\nimport { Token } from '../entities/Token'\nimport { TokenMap } from '../types/TokenMap'\n\nexport const USDC: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, USDC_ADDRESS[ChainId.MAINNET], 6, 'USDC', 'USD Coin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin')\n}\n\nexport const WETH9: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, WETH9_ADDRESS[ChainId.MAINNET], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ARBITRUM_TESTNET]: new Token(\n    ChainId.ARBITRUM_TESTNET,\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether')\n}\n\nexport const WNATIVE: TokenMap = {\n  [ChainId.MAINNET]: WETH9[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\n    18,\n    'FTM',\n    'Wrapped FTM'\n  ),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\n    18,\n    'WBNB',\n    'Wrapped BNB'\n  ),\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\n  [ChainId.MOONBEAM_TESTNET]: new Token(\n    ChainId.MOONBEAM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.AVALANCHE_TESTNET]: new Token(\n    ChainId.AVALANCHE_TESTNET,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\n    18,\n    'WAVAX',\n    'Wrapped AVAX'\n  ),\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\n    18,\n    'WHT',\n    'Wrapped HT'\n  ),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\n  [ChainId.OKEX_TESTNET]: new Token(\n    ChainId.OKEX_TESTNET,\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\n    18,\n    'WOKT',\n    'Wrapped OKExChain'\n  ),\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm')\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Avalanche extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'AVAX', 'Avalanche')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Avalanche } = {}\n\n  public static onChain(chainId: number): Avalanche {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Binance extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'BNB', 'Binance Coin')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Binance } = {}\n\n  public static onChain(chainId: number): Binance {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Celo extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'CELO', 'Celo')\n  }\n\n  public get wrapped(): Token {\n    const wcelo = WNATIVE[this.chainId]\n    invariant(!!wcelo, 'WRAPPED')\n    return wcelo\n  }\n\n  private static _cache: { [chainId: number]: Celo } = {}\n\n  public static onChain(chainId: number): Celo {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WETH9 } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Fantom extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'FTM', 'Fantom')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Fantom } = {}\n\n  public static onChain(chainId: number): Fantom {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Harmony extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ONE', 'Harmony')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Harmony } = {}\n\n  public static onChain(chainId: number): Harmony {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Heco extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'HT', 'Huobi Token')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Heco } = {}\n\n  public static onChain(chainId: number): Heco {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Matic extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MATIC', 'Matic')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Matic } = {}\n\n  public static onChain(chainId: number): Matic {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Okex extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'OKT', 'OKExChain')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Okex } = {}\n\n  public static onChain(chainId: number): Okex {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class xDai extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'XDAI', 'xDai')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: xDai } = {}\n\n  public static onChain(chainId: number): xDai {\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Palm extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'PALM', 'Palm')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Palm } = {}\n\n  public static onChain(chainId: number): Palm {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import JSBI from 'jsbi'\n\nexport * from './addresses'\nexport * from './kashi'\nexport * from './natives'\nexport * from './numbers'\nexport * from './tokens'\n\n// Temporarily change the init code hash for Conveyor v2 support\n// export const INIT_CODE_HASH: string = '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303'\nexport const INIT_CODE_HASH: string = '0xa99ffa392d5d95a688d9158d3f51df02bf6d94b75f1da34a3cdadeb80fe9002b'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n\nexport const LAMBDA_URL = 'https://9epjsvomc4.execute-api.us-east-1.amazonaws.com/dev'\n\nexport const SOCKET_URL = 'wss://hfimt374ge.execute-api.us-east-1.amazonaws.com/dev'\n","import { Avalanche, Binance, Celo, Ether, Fantom, Harmony, Heco, Matic, Okex, Palm, xDai } from '../entities/Native'\n\nimport { ChainId } from '../enums'\n\nexport const NATIVE = {\n  [ChainId.MAINNET]: Ether.onChain(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM)\n}\n","import JSBI from 'jsbi'\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import _Big, { RoundingMode } from 'big.js'\n\nimport { BigintIsh } from '../types'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport _Decimal from 'decimal.js-light'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { MaxUint256 } from '../constants'\nimport { Rounding } from '../enums'\nimport { Token } from './Token'\nimport _Big from 'big.js'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport invariant from 'tiny-invariant'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [\n          {\n            baseAmount: CurrencyAmount<TBase>\n            quoteAmount: CurrencyAmount<TQuote>\n          }\n        ]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { keccak256, pack } from '@ethersproject/solidity'\n\nimport { INIT_CODE_HASH } from '../constants'\nimport { Token } from '../entities'\nimport { getCreate2Address } from '@ethersproject/address'\n\nexport const computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB\n}: {\n  factoryAddress: string\n  tokenA: Token\n  tokenB: Token\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n    INIT_CODE_HASH\n  )\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\n\nimport { BigintIsh } from '../types'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport JSBI from 'jsbi'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport { computePairAddress } from '../functions/computePairAddress'\nimport invariant from 'tiny-invariant'\nimport { sqrt } from '../functions/sqrt'\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    return computePairAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB\n    })\n  }\n\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\n      ? [currencyAmountA, currencyAmountB]\n      : [currencyAmountB, currencyAmountA]\n    this.liquidityToken = new Token(\n      currencyAmounts[0].currency.chainId,\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\n      18,\n      // 'UNI-V2',\n      // 'Uniswap V2'\n      'CON-V2',\n      'Conveyor V2'\n    )\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency)\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency)\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      )\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = JSBI.BigInt(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n    )\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Currency } from './Currency'\nimport { Pair } from './Pair'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: TInput\n  public readonly output: TOutput\n\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\n    invariant(pairs.length > 0, 'PAIRS')\n    const chainId: number = pairs[0].chainId\n    invariant(\n      pairs.every(pair => pair.chainId === chainId),\n      'CHAIN_IDS'\n    )\n\n    const wrappedInput = input.wrapped\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\n\n    const path: Token[] = [wrappedInput]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.input = input\n    this.output = output\n  }\n\n  private _midPrice: Price<TInput, TOutput> | null = null\n\n  public get midPrice(): Price<TInput, TOutput> {\n    if (this._midPrice !== null) return this._midPrice\n    const prices: Price<Currency, Currency>[] = []\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(\n        this.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\n      )\n    }\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\n  }\n\n  public get chainId(): number {\n    return this.pairs[0].chainId\n  }\n}\n","import { Currency } from '../entities/Currency'\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\nimport { Percent } from '../entities/Percent'\nimport { Price } from '../entities/Price'\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import { ONE, ZERO } from '../constants'\n\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport { Pair } from './Pair'\nimport { Percent } from './Percent'\nimport { Price } from './Price'\nimport { Route } from './Route'\nimport { Token } from './Token'\nimport { TradeType } from '../enums'\nimport { computePriceImpact } from '../functions/computePriceImpact'\nimport invariant from 'tiny-invariant'\nimport { sortedInsert } from '../functions/sortedInsert'\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\n  readonly inputAmount: CurrencyAmount<TInput>\n  readonly outputAmount: CurrencyAmount<TOutput>\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\n  a: InputOutput<TInput, TOutput>,\n  b: InputOutput<TInput, TOutput>\n): number {\n  // must have same input and output token for comparison\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n  a: Trade<TInput, TOutput, TTradeType>,\n  b: Trade<TInput, TOutput, TTradeType>\n) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\n   */\n  public readonly route: Route<TInput, TOutput>\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TTradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount<TInput>\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount<TOutput>\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price<TInput, TOutput>\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountIn: CurrencyAmount<TInput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountOut: CurrencyAmount<TOutput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(\n    route: Route<TInput, TOutput>,\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\n    tradeType: TTradeType\n  ) {\n    this.route = route\n    this.tradeType = tradeType\n\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(amount.currency.equals(route.input), 'INPUT')\n      tokenAmounts[0] = amount.wrapped\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\n        tokenAmounts[i + 1] = outputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        tokenAmounts[tokenAmounts.length - 1].numerator,\n        tokenAmounts[tokenAmounts.length - 1].denominator\n      )\n    } else {\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\n        tokenAmounts[i - 1] = inputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        tokenAmounts[0].numerator,\n        tokenAmounts[0].denominator\n      )\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n    }\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.quotient,\n      this.outputAmount.quotient\n    )\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.quotient).quotient\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.quotient)\n        .quotient\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param nextAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount<TInput>,\n    currencyOut: TOutput,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountIn = nextAmountIn.wrapped\n    const tokenOut = currencyOut.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: CurrencyAmount<Token>\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\n            currencyAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          currencyAmountIn,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          amountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * Return the execution price after accounting for slippage tolerance\n   * @param slippageTolerance the allowed tolerated slippage\n   */\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\n    return new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.maximumAmountIn(slippageTolerance).quotient,\n      this.minimumAmountOut(slippageTolerance).quotient\n    )\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param nextAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyIn: TInput,\n    currencyAmountOut: CurrencyAmount<TOutput>,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountOut = nextAmountOut.wrapped\n    const tokenIn = currencyIn.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: CurrencyAmount<Token>\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\n            currencyAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          currencyAmountOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          amountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\nexport interface RToken {\n  name: string\n  address: string\n}\n\nexport enum PoolType {\n  ConstantProduct = 'ConstantProduct',\n  Weighted = 'Weighted',\n  Hybrid = 'Hybrid',\n  ConcentratedLiquidity = 'ConcentratedLiquidity'\n}\n\nexport interface PoolInfo {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\ntype PoolInfoWithDefaults = PartialBy<PoolInfo, 'minLiquidity' | 'swapGasCost'>\n\nexport class Pool {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n\n  constructor(_info: PoolInfoWithDefaults) {\n    const info = {\n      minLiquidity: 1000,\n      swapGasCost: 40_000,\n      ..._info\n    }\n    this.address = info.address\n    this.token0 = info.token0\n    this.token1 = info.token1\n    this.type = info.type\n    this.reserve0 = info.reserve0\n    this.reserve1 = info.reserve1\n    this.fee = info.fee\n    this.minLiquidity = info.minLiquidity\n    this.swapGasCost = info.swapGasCost\n  }\n}\n\ntype PoolInfoNoType = Omit<PoolInfoWithDefaults, 'type'>\n\nexport class ConstantProductPool extends Pool {\n  constructor(info: PoolInfoNoType) {\n    super({\n      type: PoolType.ConstantProduct,\n      ...info\n    })\n  }\n  // public static fromPool(pool: ConstantProductPool) {\n  //   return\n  // }\n}\n\ntype HybridPoolInfo = PoolInfoNoType & { A: number }\n\nexport class HybridPool extends Pool {\n  A: number\n  constructor(info: HybridPoolInfo) {\n    super({\n      type: PoolType.Hybrid,\n      ...info\n    })\n    this.A = info.A\n  }\n}\n\ntype WeightedPoolInfo = PoolInfoNoType & { weight0: number; weight1: number }\n\nexport class WeightedPool extends Pool {\n  weight0: number\n  weight1: number\n  constructor(info: WeightedPoolInfo) {\n    super({\n      type: PoolType.Weighted,\n      ...info\n    })\n    this.weight0 = info.weight0\n    this.weight1 = info.weight1\n  }\n}\n\nexport const CL_MIN_TICK = -887272\nexport const CL_MAX_TICK = -CL_MIN_TICK - 1\ninterface CLTick {\n  index: number\n  DLiquidity: number\n}\n\ninterface CLSpecific {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n}\n\ntype CLPoolInfo = Omit<PoolInfoNoType, 'reserve0' | 'reserve1'> & CLSpecific\n\nexport class ConcentratedLiquidityPool extends Pool {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n  constructor(info: CLPoolInfo) {\n    super({\n      type: PoolType.ConcentratedLiquidity,\n      reserve0: BigNumber.from(0),\n      reserve1: BigNumber.from(0),\n      ...info\n    })\n    this.liquidity = info.liquidity\n    this.sqrtPrice = info.sqrtPrice\n    this.nearestTick = info.nearestTick\n    this.ticks = info.ticks\n  }\n}\n\nexport interface RouteLeg {\n  address: string\n  token: RToken\n  swapPortion: number // For router contract\n  absolutePortion: number // To depict at webpage for user\n}\n\nexport enum RouteStatus {\n  Success = 'Success',\n  NoWay = 'NoWay',\n  Partial = 'Partial'\n}\nexport interface MultiRoute {\n  status: RouteStatus\n  amountIn: number\n  amountOut: number\n  legs: RouteLeg[]\n  gasSpent: number\n  totalAmountOut: number\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const types = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  LimitOrder: [\n    { name: 'maker', type: 'address' },\n    { name: 'tokenIn', type: 'address' },\n    { name: 'tokenOut', type: 'address' },\n    { name: 'amountIn', type: 'uint256' },\n    { name: 'amountOut', type: 'uint256' },\n    { name: 'recipient', type: 'address' },\n    { name: 'startTime', type: 'uint256' },\n    { name: 'endTime', type: 'uint256' },\n    { name: 'stopPrice', type: 'uint256' },\n    { name: 'oracleAddress', type: 'address' },\n    { name: 'oracleData', type: 'bytes32' }\n  ]\n}\n\nexport const bentoTypes = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  SetMasterContractApproval: [\n    { name: 'warning', type: 'string' },\n    { name: 'user', type: 'address' },\n    { name: 'masterContract', type: 'address' },\n    { name: 'approved', type: 'bool' },\n    { name: 'nonce', type: 'uint256' }\n  ]\n}\nexport const name = 'LimitOrder'\n","import { BENTOBOX_ADDRESS, STOP_LIMIT_ORDER_ADDRESS } from '../constants'\nimport { bentoTypes, name, types } from '../types'\n\nimport { ChainId } from 'enums'\nimport { SigningKey } from '@ethersproject/signing-key'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { getMessage } from 'eip-712'\nimport { splitSignature } from '@ethersproject/bytes'\n\nexport interface Domain {\n  name: string\n  chainId: ChainId\n  verifyingContract: string\n}\n\nexport interface Message {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string\n  endTime: string\n  stopPrice: string\n  oracleAddress: string\n  oracleData: string\n}\n\nexport interface BentoApprovalMessage {\n  warning: string\n  user: string\n  masterContract: string\n  approved: boolean\n  nonce: number\n}\n\nexport const getSignature = (message: Message, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return sign({ types, primaryType: 'LimitOrder', domain, message }, privateKey)\n}\n\nexport const getTypedData = (message: Message, chainId: ChainId) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return { types, primaryType: 'LimitOrder', domain, message }\n}\n\nexport const getTypedDataBento = (message: BentoApprovalMessage, chainId: ChainId) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return {\n    types: bentoTypes,\n    primaryType: 'SetMasterContractApproval',\n    domain,\n    message\n  }\n}\n\nexport const getTypeHash = (typedData: any) => {\n  let message = getMessage(typedData, true).toString('hex')\n  return `0x${message}`\n}\n\nconst sign = (typedData: any, privateKey: string) => {\n  let message = getMessage(typedData, true)\n  const signingKey = new SigningKey(privateKey)\n  const { v, r, s } = signingKey.signDigest(message)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProvider = async (\n  message: Message,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedData(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.maker, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProviderBentobox = async (\n  message: BentoApprovalMessage,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedDataBento(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.user, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureBento = async (bentoApproval: BentoApprovalMessage, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return sign(\n    {\n      types: bentoTypes,\n      primaryType: 'SetMasterContractApproval',\n      domain,\n      message: bentoApproval\n    },\n    privateKey\n  )\n}\n","import { Currency } from './entities/Currency'\nimport { CurrencyAmount } from './entities/CurrencyAmount'\nimport { Percent } from './entities/Percent'\nimport { Token } from './entities/Token'\nimport { Trade } from './entities/Trade'\nimport { TradeType } from './enums/TradeType'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\n  return `0x${currencyAmount.quotient.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(\n    trade: Trade<Currency, Currency, TradeType>,\n    options: TradeOptions | TradeOptionsDeadline\n  ): SwapParameters {\n    const etherIn = trade.inputAmount.currency.isNative\n    const etherOut = trade.outputAmount.currency.isNative\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport {\n  Pool,\n  PoolType,\n  HybridPool,\n  WeightedPool,\n  ConcentratedLiquidityPool,\n  CL_MIN_TICK,\n  CL_MAX_TICK\n} from '../types/MultiRouterTypes'\n\nconst A_PRECISION = 100\n\nconst DCacheBN = new Map<Pool, BigNumber>()\nexport function HybridComputeLiquidity(pool: HybridPool): BigNumber {\n  const res = DCacheBN.get(pool)\n  if (res !== undefined) return res\n\n  const r0 = pool.reserve0\n  const r1 = pool.reserve1\n\n  if (r0.isZero() && r1.isZero()) {\n    DCacheBN.set(pool, BigNumber.from(0))\n    return BigNumber.from(0)\n  }\n  const s = r0.add(r1)\n\n  const nA = BigNumber.from(pool.A * 2)\n\n  let prevD\n\n  let D = s\n  for (let i = 0; i < 256; i++) {\n    const dP = D.mul(D)\n      .div(r0)\n      .mul(D)\n      .div(r1)\n      .div(4)\n    prevD = D\n    D = nA\n      .mul(s)\n      .div(A_PRECISION)\n      .add(dP.mul(2))\n      .mul(D)\n      .div(\n        nA\n          .div(A_PRECISION)\n          .sub(1)\n          .mul(D)\n          .add(dP.mul(3))\n      )\n    if (\n      D.sub(prevD)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  DCacheBN.set(pool, D)\n  return D\n}\n\nexport function HybridgetY(pool: HybridPool, x: BigNumber): BigNumber {\n  const D = HybridComputeLiquidity(pool)\n\n  const nA = pool.A * 2\n\n  let c = D.mul(D)\n    .div(x.mul(2))\n    .mul(D)\n    .div((nA * 2) / A_PRECISION)\n  let b = D.mul(A_PRECISION)\n    .div(nA)\n    .add(x)\n\n  let yPrev\n  let y = D\n  for (let i = 0; i < 256; i++) {\n    yPrev = y\n\n    y = y\n      .mul(y)\n      .add(c)\n      .div(\n        y\n          .mul(2)\n          .add(b)\n          .sub(D)\n      )\n    if (\n      y\n        .sub(yPrev)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  return y\n}\n\nexport function calcOutByIn(pool: Pool, amountIn: number, direction = true): number {\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      return (y * amountIn) / (x / (1 - pool.fee) + amountIn)\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as WeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      const actualIn = amountIn * (1 - pool.fee)\n      const out = y * (1 - Math.pow(x / (x + actualIn), weightRatio))\n      return out\n    }\n    case PoolType.Hybrid: {\n      // const xNew = x + amountIn*(1-pool.fee);\n      // const yNew = HybridgetY(pool, xNew);\n      // const dy = y - yNew;\n\n      const xNewBN = xBN.add(getBigNumber(undefined, amountIn * (1 - pool.fee)))\n      const yNewBN = HybridgetY(pool as HybridPool, xNewBN)\n      const dy = parseInt(yBN.sub(yNewBN).toString())\n\n      return dy\n    }\n    case PoolType.ConcentratedLiquidity: {\n      return ConcentratedLiquidityOutByIn(pool as ConcentratedLiquidityPool, amountIn, direction)\n    }\n  }\n}\n\nexport class OutOfLiquidity extends Error {}\n\nfunction ConcentratedLiquidityOutByIn(pool: ConcentratedLiquidityPool, inAmount: number, direction: boolean) {\n  if (pool.ticks.length === 0) return 0\n  if (pool.ticks[0].index > CL_MIN_TICK) pool.ticks.unshift({ index: CL_MIN_TICK, DLiquidity: 0 })\n  if (pool.ticks[pool.ticks.length - 1].index < CL_MAX_TICK) pool.ticks.push({ index: CL_MAX_TICK, DLiquidity: 0 })\n\n  let nextTickToCross = direction ? pool.nearestTick : pool.nearestTick + 1\n  let currentPrice = pool.sqrtPrice\n  let currentLiquidity = pool.liquidity\n  let outAmount = 0\n  let input = inAmount\n\n  while (input > 0) {\n    if (nextTickToCross < 0 || nextTickToCross >= pool.ticks.length) throw new OutOfLiquidity()\n\n    const nextTickPrice = Math.sqrt(Math.pow(1.0001, pool.ticks[nextTickToCross].index))\n    // console.log('L, P, tick, nextP', currentLiquidity,\n    //     currentPrice, pool.ticks[nextTickToCross].index, nextTickPrice);\n    let output = 0\n\n    if (direction) {\n      const maxDx = (currentLiquidity * (currentPrice - nextTickPrice)) / currentPrice / nextTickPrice\n      //console.log('input, maxDx', input, maxDx);\n\n      if (input <= maxDx) {\n        output = (currentLiquidity * currentPrice * input) / (input + currentLiquidity / currentPrice)\n        input = 0\n      } else {\n        output = currentLiquidity * (currentPrice - nextTickPrice)\n        currentPrice = nextTickPrice\n        input -= maxDx\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross--\n      }\n    } else {\n      const maxDy = currentLiquidity * (nextTickPrice - currentPrice)\n      //console.log('input, maxDy', input, maxDy);\n      if (input <= maxDy) {\n        output = input / currentPrice / (currentPrice + input / currentLiquidity)\n        input = 0\n      } else {\n        output = (currentLiquidity * (nextTickPrice - currentPrice)) / currentPrice / nextTickPrice\n        currentPrice = nextTickPrice\n        input -= maxDy\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross++\n      }\n    }\n\n    outAmount += output * (1 - pool.fee)\n    //console.log('out', outAmount);\n  }\n\n  return outAmount\n}\n\nexport function calcInByOut(pool: Pool, amountOut: number, direction: boolean): number {\n  let input = 0\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      input = (x * amountOut) / (1 - pool.fee) / (y - amountOut)\n      break\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as WeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      input = x * (1 - pool.fee) * (Math.pow(1 - amountOut / y, -weightRatio) - 1)\n      break\n    }\n    case PoolType.Hybrid: {\n      let yNewBN = yBN.sub(getBigNumber(undefined, amountOut))\n      if (yNewBN.lt(1))\n        // lack of precision\n        yNewBN = BigNumber.from(1)\n\n      const xNewBN = HybridgetY(pool as HybridPool, yNewBN)\n      input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - pool.fee))\n\n      // const yNew = y - amountOut;\n      // const xNew = HybridgetY(pool, yNew);\n      // input = (xNew - x)/(1-pool.fee);\n      break\n    }\n    default:\n      console.error('Unknown pool type')\n  }\n\n  // ASSERT(() => {\n  //   const amount2 = calcOutByIn(pool, input, direction);\n  //   const res = closeValues(amountOut, amount2, 1e-6);\n  //   if (!res) console.log(\"Error 138:\", amountOut, amount2, Math.abs(amountOut/amount2 - 1));\n  //   return res;\n  // });\n  if (input < 1) input = 1\n  return input\n}\n\nexport function calcPrice(pool: Pool, amountIn: number): number {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = r0 / (1 - pool.fee)\n      return (r1 * x) / (x + amountIn) / (x + amountIn)\n    }\n    case PoolType.Weighted: {\n      const wPool = pool as WeightedPool\n      const weightRatio = wPool.weight0 / wPool.weight1\n      const x = r0 + amountIn * (1 - pool.fee)\n      return (r1 * weightRatio * (1 - pool.fee) * Math.pow(r0 / x, weightRatio)) / x\n    }\n    case PoolType.Hybrid: {\n      const hPool = pool as HybridPool\n      const D = parseInt(HybridComputeLiquidity(hPool).toString())\n      const A = hPool.A / A_PRECISION\n      const x = r0 + amountIn\n      const b = 4 * A * x + D - 4 * A * D\n      const ac4 = (D * D * D) / x\n      const Ds = Math.sqrt(b * b + 4 * A * ac4)\n      const res = (0.5 - (2 * b - ac4 / x) / Ds / 4) * (1 - pool.fee)\n      return res\n    }\n  }\n  return 0\n}\n\nfunction calcInputByPriceConstantMean(pool: WeightedPool, price: number) {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  const weightRatio = pool.weight0 / pool.weight1\n  const t = r1 * price * weightRatio * (1 - pool.fee) * Math.pow(r0, weightRatio)\n  return (Math.pow(t, 1 / (weightRatio + 1)) - r0) / (1 - pool.fee)\n}\n\nexport function calcInputByPrice(pool: Pool, priceEffective: number, hint = 1): number {\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const r0 = parseInt(pool.reserve0.toString())\n      const r1 = parseInt(pool.reserve1.toString())\n      const x = r0 / (1 - pool.fee)\n      const res = Math.sqrt(r1 * x * priceEffective) - x\n      return res\n    }\n    case PoolType.Weighted: {\n      const res = calcInputByPriceConstantMean(pool as WeightedPool, priceEffective)\n      return res\n    }\n    case PoolType.Hybrid: {\n      return revertPositive((x: number) => 1 / calcPrice(pool, x), priceEffective, hint)\n    }\n  }\n  return 0\n}\n\n//================================= Utils ====================================\n\nexport function ASSERT(f: () => boolean, t?: string) {\n  if (!f() && t) console.error(t)\n}\n\nexport function closeValues(a: number, b: number, accuracy: number): boolean {\n  if (accuracy === 0) return a === b\n  if (a < 1 / accuracy) return Math.abs(a - b) <= 10\n  return Math.abs(a / b - 1) < accuracy\n}\n\nexport function calcSquareEquation(a: number, b: number, c: number): [number, number] {\n  const D = b * b - 4 * a * c\n  console.assert(D >= 0, `Discriminant is negative! ${a} ${b} ${c}`)\n  const sqrtD = Math.sqrt(D)\n  return [(-b - sqrtD) / 2 / a, (-b + sqrtD) / 2 / a]\n}\n\n// returns such x > 0 that f(x) = out or 0 if there is no such x or f defined not everywhere\n// hint - approximation of x to spead up the algorithm\n// f assumed to be continues monotone growth function defined everywhere\nexport function revertPositive(f: (x: number) => number, out: number, hint = 1) {\n  try {\n    if (out <= f(0)) return 0\n    let min, max\n    if (f(hint) > out) {\n      min = hint / 2\n      while (f(min) > out) min /= 2\n      max = min * 2\n    } else {\n      max = hint * 2\n      while (f(max) < out) max *= 2\n      min = max / 2\n    }\n\n    while (max / min - 1 > 1e-4) {\n      const x0: number = (min + max) / 2\n      const y0 = f(x0)\n      if (out === y0) return x0\n      if (out < y0) max = x0\n      else min = x0\n    }\n    return (min + max) / 2\n  } catch (e) {\n    return 0\n  }\n}\n\nexport function getBigNumber(valueBN: BigNumber | undefined, value: number): BigNumber {\n  if (valueBN !== undefined) return valueBN\n\n  if (value < Number.MAX_SAFE_INTEGER) return BigNumber.from(Math.round(value))\n\n  const exp = Math.floor(Math.log(value) / Math.LN2)\n  console.assert(exp >= 51, 'Internal Error 314')\n  const shift = exp - 51\n  const mant = Math.round(value / Math.pow(2, shift))\n  const res = BigNumber.from(mant).mul(BigNumber.from(2).pow(shift))\n  return res\n}\n","import { CurrencyAmount, Price, Token } from './entities'\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from './constants'\nimport { Message, getSignature, getSignatureWithProvider, getTypeHash, getTypedData } from './entities'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId } from './enums'\nimport { Contract } from '@ethersproject/contracts'\nimport { NonceManager } from '@ethersproject/experimental'\nimport { Signer } from '@ethersproject/abstract-signer'\nimport { Transaction } from '@ethersproject/transactions'\nimport { Web3Provider } from '@ethersproject/providers'\nimport abi from './abis/StopLimitOrder.json'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport fetch from 'isomorphic-unfetch'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\nexport interface ILimitOrderData {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  tokenInDecimals: number\n  tokenOutDecimals: number\n  tokenInSymbol: string\n  tokenOutSymbol: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string | number\n  endTime: string | number\n  stopPrice?: string\n  oracleAddress?: string\n  oracleData?: string\n  v: number\n  r: string\n  s: string\n  chainId: ChainId\n  orderTypeHash?: string\n}\n\nexport class LimitOrder {\n  public readonly maker: string\n  public readonly amountIn: CurrencyAmount<Token>\n  public readonly amountOut: CurrencyAmount<Token>\n  public readonly recipient: string\n  public readonly startTime: string\n  public readonly endTime: string\n  public readonly stopPrice: string\n  public readonly oracleAddress: string\n  public readonly oracleData: string\n  public v: number\n  public r: string\n  public s: string\n\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\n    return new LimitOrder(\n      data.maker,\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenIn, data.tokenInDecimals, data.tokenInSymbol),\n        data.amountIn\n      ),\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenOut, data.tokenOutDecimals, data.tokenOutSymbol),\n        data.amountOut\n      ),\n      data.recipient,\n      data.startTime,\n      data.endTime,\n      data.stopPrice,\n      data.oracleAddress,\n      data.oracleData,\n      data.v,\n      data.r,\n      data.s\n    )\n  }\n\n  constructor(\n    maker: string,\n    amountIn: CurrencyAmount<Token>,\n    amountOut: CurrencyAmount<Token>,\n    recipient: string,\n    startTime: string | number,\n    endTime: string | number,\n    stopPrice = '0',\n    oracleAddress = '0x0000000000000000000000000000000000000000',\n    oracleData = '0x00000000000000000000000000000000000000000000000000000000000000',\n    v = 0,\n    r = '',\n    s = ''\n  ) {\n    this.maker = validateAndParseAddress(maker)\n    this.amountIn = amountIn\n    this.amountOut = amountOut\n    this.recipient = validateAndParseAddress(recipient)\n    this.startTime = startTime.toString()\n    this.endTime = endTime.toString()\n    this.stopPrice = stopPrice\n    this.oracleAddress = validateAndParseAddress(oracleAddress)\n    this.oracleData = oracleData\n    this.v = v\n    this.r = r\n    this.s = s\n  }\n\n  get amountInRaw(): string {\n    return this.amountIn.quotient.toString()\n  }\n\n  get amountOutRaw(): string {\n    return this.amountOut.quotient.toString()\n  }\n\n  get tokenInAddress(): string {\n    return this.amountIn.currency.address\n  }\n\n  get tokenOutAddress(): string {\n    return this.amountOut.currency.address\n  }\n\n  get tokenInDecimals(): number {\n    return this.amountIn.currency.decimals\n  }\n\n  get tokenOutDecimals(): number {\n    return this.amountOut.currency.decimals\n  }\n\n  get tokenInSymbol(): string {\n    return this.amountIn.currency.symbol || ''\n  }\n\n  get tokenOutSymbol(): string {\n    return this.amountOut.currency.symbol || ''\n  }\n\n  get chainId(): ChainId {\n    return this.amountIn.currency.chainId\n  }\n\n  usePrice(price: Price<Token, Token>): LimitOrder {\n    return new LimitOrder(\n      this.maker,\n      this.amountIn,\n      CurrencyAmount.fromRawAmount(this.amountOut.currency, price.quote(this.amountIn).quotient.toString()),\n      this.recipient,\n      this.startTime,\n      this.endTime,\n      this.stopPrice,\n      this.oracleAddress,\n      this.oracleData\n    )\n  }\n\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = getSignature(order, chainId, privateKey)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = await getSignatureWithProvider(order, chainId, provider)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  getTypedData() {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    return getTypedData(order, this.chainId)\n  }\n\n  getTypeHash() {\n    let typedData = this.getTypedData()\n    let digest = getTypeHash(typedData)\n    return digest\n  }\n\n  async send() {\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\n      method: 'POST',\n      body: JSON.stringify({\n        maker: this.maker,\n        tokenIn: this.tokenInAddress,\n        tokenOut: this.tokenOutAddress,\n        tokenInDecimals: this.tokenInDecimals,\n        tokenOutDecimals: this.tokenOutDecimals,\n        tokenInSymbol: this.tokenInSymbol,\n        tokenOutSymbol: this.tokenOutSymbol,\n        amountIn: this.amountInRaw,\n        amountOut: this.amountOutRaw,\n        recipient: this.recipient,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        stopPrice: this.stopPrice,\n        oracleAddress: this.oracleAddress,\n        oracleData: this.oracleData,\n        v: this.v,\n        r: this.r,\n        s: this.s,\n        chainId: this.amountIn.currency.chainId\n      })\n    })\n\n    return resp.json()\n  }\n}\n\nexport class FillLimitOrder {\n  public readonly order: LimitOrder\n  public readonly path: string[]\n  public readonly amountExternal: BigNumber\n  public readonly amountToFill: BigNumber\n  public readonly limitOrderReceiver: string\n  public readonly to: string\n  public readonly tokenIn: string\n  public readonly tokenOut: string\n  public readonly limitOrderReceiverData: string\n\n  constructor(\n    order: LimitOrder,\n    path: string[],\n    amountExternal: BigNumber,\n    amountToFill: BigNumber,\n    limitOrderReceiver: string,\n    to: string,\n    keepTokenIn = false\n  ) {\n    this.order = order\n    this.path = path.map(validateAndParseAddress)\n    this.amountExternal = amountExternal\n    this.amountToFill = amountToFill\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver)\n    this.to = validateAndParseAddress(to)\n    this.tokenIn = order.amountIn.currency.address\n    this.tokenOut = order.amountOut.currency.address\n\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\n      ['address[]', 'uint256', 'address', 'bool'],\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\n    )\n  }\n\n  public fillOrderOpen(\n    signer: Signer,\n    extra: {\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      nonce?: number\n      debug?: boolean\n      open?: boolean\n    }\n  ) {\n    extra.open = true\n    return this.fillOrder(signer, extra)\n  }\n\n  public async fillOrder(\n    signer: Signer | NonceManager,\n    extra: {\n      debug?: boolean\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      open?: boolean\n      nonce?: number\n    }\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra\n\n    const func = open ? 'fillOrderOpen' : 'fillOrder'\n\n    const orderArg = [\n      this.order.maker,\n      this.order.amountInRaw,\n      this.order.amountOutRaw,\n      this.order.recipient,\n      this.order.startTime,\n      this.order.endTime,\n      this.order.stopPrice,\n      this.order.oracleAddress,\n      this.order.oracleData,\n      this.amountToFill.toString(),\n      this.order.v,\n      this.order.r,\n      this.order.s\n    ]\n\n    const limitOrderContract = new Contract(STOP_LIMIT_ORDER_ADDRESS[this.order.chainId], abi, signer)\n\n    let gasLimit\n    let executed = true\n\n    if (extra.debug) console.log(orderArg, this.path, this.limitOrderReceiver, this.limitOrderReceiverData)\n\n    try {\n      gasLimit = await limitOrderContract.estimateGas[func](\n        orderArg,\n        this.path[0],\n        this.path[this.path.length - 1],\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      )\n      gasLimit = gasLimit.mul(11).div(10)\n    } catch (e) {\n      if (forceExecution) {\n        console.log('Failed to estimate gas, forcing execution')\n        gasLimit = BigNumber.from('400000') // 400k\n        executed = true\n      } else {\n        return { executed: false }\n      }\n    }\n\n    const transaction: Transaction = await limitOrderContract.fillOrder(\n      orderArg,\n      this.path[0],\n      this.path[this.path.length - 1],\n      this.limitOrderReceiver,\n      this.limitOrderReceiverData,\n      { gasLimit, gasPrice, nonce }\n    )\n\n    return { executed, transaction }\n  }\n}\n","import { SOLIDITY_TYPE_MAXIMA, SolidityType, ZERO } from '../constants'\n\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n"],"names":["ChainId","Rounding","TradeType","KashiAction","Fee","OrderStatus","USDC_ADDRESS","MAINNET","ROPSTEN","KOVAN","MATIC","FANTOM","BSC","HARMONY","HECO","OKEX","XDAI","FACTORY_ADDRESS","RINKEBY","GÖRLI","FANTOM_TESTNET","MATIC_TESTNET","BSC_TESTNET","ARBITRUM","ARBITRUM_TESTNET","MOONBEAM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","OKEX_TESTNET","CELO","PALM","PALM_TESTNET","ROUTER_ADDRESS","SUSHI_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","BORING_HELPER_ADDRESS","STOP_LIMIT_ORDER_ADDRESS","ARCHER_ROUTER_ADDRESS","MINICHEF_ADDRESS","WETH9_ADDRESS","WNATIVE_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","MINIMUM_TARGET_UTILIZATION","BigNumber","from","MAXIMUM_TARGET_UTILIZATION","UTILIZATION_PRECISION","FULL_UTILIZATION","FULL_UTILIZATION_MINUS_MAX","sub","STARTING_INTEREST_PER_YEAR","mul","MINIMUM_INTEREST_PER_YEAR","MAXIMUM_INTEREST_PER_YEAR","INTEREST_ELASTICITY","FACTOR_PRECISION","PROTOCOL_FEE","PROTOCOL_FEE_DIVISOR","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","getAddress","error","Token","equals","other","isToken","this","sortsBefore","toLowerCase","USDC","WETH9","WNATIVE","Avalanche","_NativeCurrency","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Okex","xDai","Palm","SolidityType","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SOLIDITY_TYPE_MAXIMA","uint8","uint256","LAMBDA_URL","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","_this","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","_this2","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","_Fraction","toExact","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePairAddress","factoryAddress","tokenA","tokenB","getCreate2Address","keccak256","pack","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","Pair","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","token0","token1","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","a","b","tradeComparator","ioComp","route","PoolType","Trade","amount","tradeType","Array","EXACT_INPUT","i","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","then","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","Promise","iter","keys","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","RouteStatus","Pool","_info","minLiquidity","swapGasCost","fee","ConstantProductPool","_Pool","ConstantProduct","HybridPool","Hybrid","A","WeightedPool","Weighted","weight0","weight1","ConcentratedLiquidityPool","ConcentratedLiquidity","sqrtPrice","nearestTick","ticks","types","EIP712Domain","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","privateKey","sign","primaryType","domain","verifyingContract","getTypedData","getTypedDataBento","getTypeHash","typedData","getMessage","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","toHex","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","methodName","to","recipient","allowedSlippage","map","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","DCacheBN","Map","HybridComputeLiquidity","pool","res","get","r0","r1","isZero","prevD","nA","D","dP","abs","lte","HybridgetY","yPrev","c","y","OutOfLiquidity","calcPrice","parseInt","weightRatio","pow","hPool","ac4","revertPositive","f","out","hint","min","max","x0","y0","e","getBigNumber","valueBN","round","exp","log","LN2","console","assert","shift","mant","startTime","endTime","stopPrice","oracleAddress","oracleData","getLimitOrder","data","tokenInDecimals","tokenInSymbol","tokenOutDecimals","tokenOutSymbol","usePrice","price","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","signOrderWithProvider","fetch","body","json","FillLimitOrder","amountExternal","amountToFill","limitOrderReceiver","keepTokenIn","limitOrderReceiverData","defaultAbiCoder","encode","fillOrderOpen","signer","extra","open","fillOrder","gasPrice","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","estimateGas","gasLimit","transaction","t","direction","xBN","yBN","yNewBN","lt","xNewBN","priceEffective","calcInputByPriceConstantMean","inAmount","index","unshift","DLiquidity","nextTickToCross","currentPrice","currentLiquidity","outAmount","nextTickPrice","maxDx","maxDy","ConcentratedLiquidityOutByIn","sqrtD","accuracy","currencyA","currencyB","solidityType"],"mappings":"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"}