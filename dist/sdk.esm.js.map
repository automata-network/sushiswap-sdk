{"version":3,"file":"sdk.esm.js","sources":["../src/enums/ChainId.ts","../src/enums/Rounding.ts","../src/enums/TradeType.ts","../src/enums/KashiAction.ts","../src/enums/Fee.ts","../src/enums/OrderStatus.ts","../src/constants/addresses.ts","../src/constants/kashi.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/index.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePairAddress.ts","../src/functions/sqrt.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../node_modules/regenerator-runtime/runtime.js","../src/types/MultiRouterTypes.ts","../src/types/LimitOrderTypes.ts","../src/entities/eip712.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts","../src/utils/MultiRouterMath.ts","../src/limitorder.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 42161,\n  ARBITRUM_TESTNET = 79377087078960,\n  MOONBEAM_TESTNET = 1287,\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  OKEX = 66,\n  OKEX_TESTNET = 65,\n  CELO = 42220,\n  PALM = 11297108109,\n  PALM_TESTNET = 11297108099\n}\n","export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n","export enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n","export enum KashiAction {\n  ADD_ASSET = 1,\n  REPAY = 2,\n  REMOVE_ASSET = 3,\n  REMOVE_COLLATERAL = 4,\n  BORROW = 5,\n  GET_REPAY_SHARE = 6,\n  GET_REPAY_PART = 7,\n  ACCRUE = 8,\n\n  // Functions that don't need accrue to be called\n  ADD_COLLATERAL = 10,\n  UPDATE_EXCHANGE_RATE = 11,\n\n  // Function on BentoBox\n  BENTO_DEPOSIT = 20,\n  BENTO_WITHDRAW = 21,\n  BENTO_TRANSFER = 22,\n  BENTO_TRANSFER_MULTIPLE = 23,\n  BENTO_SETAPPROVAL = 24,\n\n  // Any external call (except to BentoBox)\n  CALL = 30\n}\n","// Fee - Tiers TBD\nexport enum Fee {\n  DEFAULT = 30\n}\n","export enum OrderStatus {\n  FILLED = 'FILLED',\n  CANCELLED = 'CANCELLED',\n  EXPIRED = 'EXPIRED',\n  PENDING = 'PENDING'\n}\n","import { AddressMap } from '../types'\nimport { ChainId } from '../enums'\n\nexport const USDC_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83'\n}\n\nexport const FACTORY_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  // [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  // Temporarily change the factory address for Conveyor v2 in BSC\n  [ChainId.BSC]: '0x3818eAb6Ca8Bf427222bfACFA706c514145F4104',\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.FANTOM]: '0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MASTERCHEF_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MAKER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const TIMELOCK_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BENTOBOX_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.KOVAN]: '0x9A0D9920D92c178a58D99B455898Df2df22A2eE4',\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const KASHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\n\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\n\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\n\nexport const CHAINLINK_ORACLE_ADDRESS = '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB'\n\nexport const BORING_HELPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ARCHER_ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9917C083FF9FbD29Df1367FBF7F2388A9a202431'\n}\n\nexport const MINICHEF_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287'\n}\n\nexport const WETH9_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\n  [ChainId.AVALANCHE]: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15'\n}\n\nexport const WNATIVE_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: WETH9_ADDRESS[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.MATIC_TESTNET]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  [ChainId.MOONBEAM_TESTNET]: '0xe73763DB808ecCDC0E36bC8E32510ED126910394',\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71'\n}\n\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d'\n}\n\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n}\n\nexport const ZAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2'\n}\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955'\n}\n\nexport const MULTICALL2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ARBITRUM]: '0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB',\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F'\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\n// Functions that need accrue to be called\nexport const ACTION_ADD_ASSET = 1\nexport const ACTION_REPAY = 2\nexport const ACTION_REMOVE_ASSET = 3\nexport const ACTION_REMOVE_COLLATERAL = 4\nexport const ACTION_BORROW = 5\nexport const ACTION_GET_REPAY_SHARE = 6\nexport const ACTION_GET_REPAY_PART = 7\nexport const ACTION_ACCRUE = 8\n\n// Functions that don't need accrue to be called\nexport const ACTION_ADD_COLLATERAL = 10\nexport const ACTION_UPDATE_EXCHANGE_RATE = 11\n\n// Function on BentoBox\nexport const ACTION_BENTO_DEPOSIT = 20\nexport const ACTION_BENTO_WITHDRAW = 21\nexport const ACTION_BENTO_TRANSFER = 22\nexport const ACTION_BENTO_TRANSFER_MULTIPLE = 23\nexport const ACTION_BENTO_SETAPPROVAL = 24\n\n// Any external call (except to BentoBox)\nexport const ACTION_CALL = 30\n\nexport const MINIMUM_TARGET_UTILIZATION = BigNumber.from('700000000000000000') // 70%\n\nexport const MAXIMUM_TARGET_UTILIZATION = BigNumber.from('800000000000000000') // 80%\n\nexport const UTILIZATION_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION_MINUS_MAX = FULL_UTILIZATION.sub(MAXIMUM_TARGET_UTILIZATION)\n\nexport const STARTING_INTEREST_PER_YEAR = BigNumber.from(317097920)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1% APR\n\nexport const MINIMUM_INTEREST_PER_YEAR = BigNumber.from(79274480)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 0.25% APR\n\nexport const MAXIMUM_INTEREST_PER_YEAR = BigNumber.from(317097920000)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1000% APR\n\nexport const INTEREST_ELASTICITY = BigNumber.from('28800000000000000000000000000000000000000') // Half or double in 28800 seconds (8 hours) if linear\n\nexport const FACTOR_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const PROTOCOL_FEE = BigNumber.from('10000') // 10%\n\nexport const PROTOCOL_FEE_DIVISOR = BigNumber.from('100000')\n","import { Currency } from './Currency'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class AbstractCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { AbstractCurrency } from './AbstractCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends AbstractCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n","import { AbstractCurrency } from './AbstractCurrency'\nimport { ChainId } from '../enums'\nimport { Currency } from './Currency'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends AbstractCurrency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(chainId, decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n","import { USDC_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\n\nimport { ChainId } from '../enums'\nimport { Token } from '../entities/Token'\nimport { TokenMap } from '../types/TokenMap'\n\nexport const USDC: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, USDC_ADDRESS[ChainId.MAINNET], 6, 'USDC', 'USD Coin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin')\n}\n\nexport const WETH9: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, WETH9_ADDRESS[ChainId.MAINNET], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH9', 'Wrapped Ether'),\n  [ChainId.ARBITRUM_TESTNET]: new Token(\n    ChainId.ARBITRUM_TESTNET,\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\n\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether')\n}\n\nexport const WNATIVE: TokenMap = {\n  [ChainId.MAINNET]: WETH9[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\n    18,\n    'FTM',\n    'Wrapped FTM'\n  ),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\n    18,\n    'WBNB',\n    'Wrapped BNB'\n  ),\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\n  [ChainId.MOONBEAM_TESTNET]: new Token(\n    ChainId.MOONBEAM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.AVALANCHE_TESTNET]: new Token(\n    ChainId.AVALANCHE_TESTNET,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\n    18,\n    'WAVAX',\n    'Wrapped AVAX'\n  ),\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\n    18,\n    'WHT',\n    'Wrapped HT'\n  ),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\n  [ChainId.OKEX_TESTNET]: new Token(\n    ChainId.OKEX_TESTNET,\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\n    18,\n    'WOKT',\n    'Wrapped OKExChain'\n  ),\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm')\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Avalanche extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'AVAX', 'Avalanche')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Avalanche } = {}\n\n  public static onChain(chainId: number): Avalanche {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Binance extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'BNB', 'Binance Coin')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Binance } = {}\n\n  public static onChain(chainId: number): Binance {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Celo extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'CELO', 'Celo')\n  }\n\n  public get wrapped(): Token {\n    const wcelo = WNATIVE[this.chainId]\n    invariant(!!wcelo, 'WRAPPED')\n    return wcelo\n  }\n\n  private static _cache: { [chainId: number]: Celo } = {}\n\n  public static onChain(chainId: number): Celo {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WETH9 } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Fantom extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'FTM', 'Fantom')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Fantom } = {}\n\n  public static onChain(chainId: number): Fantom {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Harmony extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ONE', 'Harmony')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Harmony } = {}\n\n  public static onChain(chainId: number): Harmony {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Heco extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'HT', 'Huobi Token')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Heco } = {}\n\n  public static onChain(chainId: number): Heco {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Matic extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MATIC', 'Matic')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Matic } = {}\n\n  public static onChain(chainId: number): Matic {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Okex extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'OKT', 'OKExChain')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Okex } = {}\n\n  public static onChain(chainId: number): Okex {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class xDai extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'XDAI', 'xDai')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: xDai } = {}\n\n  public static onChain(chainId: number): xDai {\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Palm extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'PALM', 'Palm')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Palm } = {}\n\n  public static onChain(chainId: number): Palm {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Avalanche, Binance, Celo, Ether, Fantom, Harmony, Heco, Matic, Okex, Palm, xDai } from '../entities/Native'\n\nimport { ChainId } from '../enums'\n\nexport const NATIVE = {\n  [ChainId.MAINNET]: Ether.onChain(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM)\n}\n","import JSBI from 'jsbi'\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n","import JSBI from 'jsbi'\n\nexport * from './addresses'\nexport * from './kashi'\nexport * from './natives'\nexport * from './numbers'\nexport * from './tokens'\n\n// Temporarily change the init code hash for Conveyor v2 support\n// export const INIT_CODE_HASH: string = '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303'\nexport const INIT_CODE_HASH: string = '0xa99ffa392d5d95a688d9158d3f51df02bf6d94b75f1da34a3cdadeb80fe9002b'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n\nexport const LAMBDA_URL = 'https://9epjsvomc4.execute-api.us-east-1.amazonaws.com/dev'\n\nexport const SOCKET_URL = 'wss://hfimt374ge.execute-api.us-east-1.amazonaws.com/dev'\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import _Big, { RoundingMode } from 'big.js'\n\nimport { BigintIsh } from '../types'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport _Decimal from 'decimal.js-light'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { MaxUint256 } from '../constants'\nimport { Rounding } from '../enums'\nimport { Token } from './Token'\nimport _Big from 'big.js'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport invariant from 'tiny-invariant'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [\n          {\n            baseAmount: CurrencyAmount<TBase>\n            quoteAmount: CurrencyAmount<TQuote>\n          }\n        ]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { keccak256, pack } from '@ethersproject/solidity'\n\nimport { INIT_CODE_HASH } from '../constants'\nimport { Token } from '../entities'\nimport { getCreate2Address } from '@ethersproject/address'\n\nexport const computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB\n}: {\n  factoryAddress: string\n  tokenA: Token\n  tokenB: Token\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n    INIT_CODE_HASH\n  )\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\n\nimport { BigintIsh } from '../types'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport JSBI from 'jsbi'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport { computePairAddress } from '../functions/computePairAddress'\nimport invariant from 'tiny-invariant'\nimport { sqrt } from '../functions/sqrt'\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    return computePairAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB\n    })\n  }\n\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\n      ? [currencyAmountA, currencyAmountB]\n      : [currencyAmountB, currencyAmountA]\n    this.liquidityToken = new Token(\n      currencyAmounts[0].currency.chainId,\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\n      18,\n      // 'UNI-V2',\n      // 'Uniswap V2'\n      'CON-V2',\n      'Conveyor V2'\n    )\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency)\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency)\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      )\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = JSBI.BigInt(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n    )\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Currency } from './Currency'\nimport { Pair } from './Pair'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: TInput\n  public readonly output: TOutput\n\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\n    invariant(pairs.length > 0, 'PAIRS')\n    const chainId: number = pairs[0].chainId\n    invariant(\n      pairs.every(pair => pair.chainId === chainId),\n      'CHAIN_IDS'\n    )\n\n    const wrappedInput = input.wrapped\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\n\n    const path: Token[] = [wrappedInput]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.input = input\n    this.output = output\n  }\n\n  private _midPrice: Price<TInput, TOutput> | null = null\n\n  public get midPrice(): Price<TInput, TOutput> {\n    if (this._midPrice !== null) return this._midPrice\n    const prices: Price<Currency, Currency>[] = []\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(\n        this.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\n      )\n    }\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\n  }\n\n  public get chainId(): number {\n    return this.pairs[0].chainId\n  }\n}\n","import { Currency } from '../entities/Currency'\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\nimport { Percent } from '../entities/Percent'\nimport { Price } from '../entities/Price'\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import { ONE, ZERO } from '../constants'\n\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport { Pair } from './Pair'\nimport { Percent } from './Percent'\nimport { Price } from './Price'\nimport { Route } from './Route'\nimport { Token } from './Token'\nimport { TradeType } from '../enums'\nimport { computePriceImpact } from '../functions/computePriceImpact'\nimport invariant from 'tiny-invariant'\nimport { sortedInsert } from '../functions/sortedInsert'\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\n  readonly inputAmount: CurrencyAmount<TInput>\n  readonly outputAmount: CurrencyAmount<TOutput>\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\n  a: InputOutput<TInput, TOutput>,\n  b: InputOutput<TInput, TOutput>\n): number {\n  // must have same input and output token for comparison\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n  a: Trade<TInput, TOutput, TTradeType>,\n  b: Trade<TInput, TOutput, TTradeType>\n) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\n   */\n  public readonly route: Route<TInput, TOutput>\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TTradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount<TInput>\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount<TOutput>\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price<TInput, TOutput>\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountIn: CurrencyAmount<TInput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountOut: CurrencyAmount<TOutput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(\n    route: Route<TInput, TOutput>,\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\n    tradeType: TTradeType\n  ) {\n    this.route = route\n    this.tradeType = tradeType\n\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(amount.currency.equals(route.input), 'INPUT')\n      tokenAmounts[0] = amount.wrapped\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\n        tokenAmounts[i + 1] = outputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        tokenAmounts[tokenAmounts.length - 1].numerator,\n        tokenAmounts[tokenAmounts.length - 1].denominator\n      )\n    } else {\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\n        tokenAmounts[i - 1] = inputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        tokenAmounts[0].numerator,\n        tokenAmounts[0].denominator\n      )\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n    }\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.quotient,\n      this.outputAmount.quotient\n    )\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.quotient).quotient\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.quotient)\n        .quotient\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param nextAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount<TInput>,\n    currencyOut: TOutput,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountIn = nextAmountIn.wrapped\n    const tokenOut = currencyOut.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: CurrencyAmount<Token>\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\n            currencyAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          currencyAmountIn,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          amountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * Return the execution price after accounting for slippage tolerance\n   * @param slippageTolerance the allowed tolerated slippage\n   */\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\n    return new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.maximumAmountIn(slippageTolerance).quotient,\n      this.minimumAmountOut(slippageTolerance).quotient\n    )\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param nextAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyIn: TInput,\n    currencyAmountOut: CurrencyAmount<TOutput>,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountOut = nextAmountOut.wrapped\n    const tokenIn = currencyIn.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: CurrencyAmount<Token>\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\n            currencyAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          currencyAmountOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          amountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\nexport interface RToken {\n  name: string\n  address: string\n}\n\nexport enum PoolType {\n  ConstantProduct = 'ConstantProduct',\n  Weighted = 'Weighted',\n  Hybrid = 'Hybrid',\n  ConcentratedLiquidity = 'ConcentratedLiquidity'\n}\n\nexport interface PoolInfo {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\ntype PoolInfoWithDefaults = PartialBy<PoolInfo, 'minLiquidity' | 'swapGasCost'>\n\nexport class Pool {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n\n  constructor(_info: PoolInfoWithDefaults) {\n    const info = {\n      minLiquidity: 1000,\n      swapGasCost: 40_000,\n      ..._info\n    }\n    this.address = info.address\n    this.token0 = info.token0\n    this.token1 = info.token1\n    this.type = info.type\n    this.reserve0 = info.reserve0\n    this.reserve1 = info.reserve1\n    this.fee = info.fee\n    this.minLiquidity = info.minLiquidity\n    this.swapGasCost = info.swapGasCost\n  }\n}\n\ntype PoolInfoNoType = Omit<PoolInfoWithDefaults, 'type'>\n\nexport class ConstantProductPool extends Pool {\n  constructor(info: PoolInfoNoType) {\n    super({\n      type: PoolType.ConstantProduct,\n      ...info\n    })\n  }\n  // public static fromPool(pool: ConstantProductPool) {\n  //   return\n  // }\n}\n\ntype HybridPoolInfo = PoolInfoNoType & { A: number }\n\nexport class HybridPool extends Pool {\n  A: number\n  constructor(info: HybridPoolInfo) {\n    super({\n      type: PoolType.Hybrid,\n      ...info\n    })\n    this.A = info.A\n  }\n}\n\ntype WeightedPoolInfo = PoolInfoNoType & { weight0: number; weight1: number }\n\nexport class WeightedPool extends Pool {\n  weight0: number\n  weight1: number\n  constructor(info: WeightedPoolInfo) {\n    super({\n      type: PoolType.Weighted,\n      ...info\n    })\n    this.weight0 = info.weight0\n    this.weight1 = info.weight1\n  }\n}\n\nexport const CL_MIN_TICK = -887272\nexport const CL_MAX_TICK = -CL_MIN_TICK - 1\ninterface CLTick {\n  index: number\n  DLiquidity: number\n}\n\ninterface CLSpecific {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n}\n\ntype CLPoolInfo = Omit<PoolInfoNoType, 'reserve0' | 'reserve1'> & CLSpecific\n\nexport class ConcentratedLiquidityPool extends Pool {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n  constructor(info: CLPoolInfo) {\n    super({\n      type: PoolType.ConcentratedLiquidity,\n      reserve0: BigNumber.from(0),\n      reserve1: BigNumber.from(0),\n      ...info\n    })\n    this.liquidity = info.liquidity\n    this.sqrtPrice = info.sqrtPrice\n    this.nearestTick = info.nearestTick\n    this.ticks = info.ticks\n  }\n}\n\nexport interface RouteLeg {\n  address: string\n  token: RToken\n  swapPortion: number // For router contract\n  absolutePortion: number // To depict at webpage for user\n}\n\nexport enum RouteStatus {\n  Success = 'Success',\n  NoWay = 'NoWay',\n  Partial = 'Partial'\n}\nexport interface MultiRoute {\n  status: RouteStatus\n  amountIn: number\n  amountOut: number\n  legs: RouteLeg[]\n  gasSpent: number\n  totalAmountOut: number\n}\n","export const types = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  LimitOrder: [\n    { name: 'maker', type: 'address' },\n    { name: 'tokenIn', type: 'address' },\n    { name: 'tokenOut', type: 'address' },\n    { name: 'amountIn', type: 'uint256' },\n    { name: 'amountOut', type: 'uint256' },\n    { name: 'recipient', type: 'address' },\n    { name: 'startTime', type: 'uint256' },\n    { name: 'endTime', type: 'uint256' },\n    { name: 'stopPrice', type: 'uint256' },\n    { name: 'oracleAddress', type: 'address' },\n    { name: 'oracleData', type: 'bytes32' }\n  ]\n}\n\nexport const bentoTypes = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  SetMasterContractApproval: [\n    { name: 'warning', type: 'string' },\n    { name: 'user', type: 'address' },\n    { name: 'masterContract', type: 'address' },\n    { name: 'approved', type: 'bool' },\n    { name: 'nonce', type: 'uint256' }\n  ]\n}\nexport const name = 'LimitOrder'\n","import { BENTOBOX_ADDRESS, STOP_LIMIT_ORDER_ADDRESS } from '../constants'\nimport { bentoTypes, name, types } from '../types'\n\nimport { ChainId } from 'enums'\nimport { SigningKey } from '@ethersproject/signing-key'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { getMessage } from 'eip-712'\nimport { splitSignature } from '@ethersproject/bytes'\n\nexport interface Domain {\n  name: string\n  chainId: ChainId\n  verifyingContract: string\n}\n\nexport interface Message {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string\n  endTime: string\n  stopPrice: string\n  oracleAddress: string\n  oracleData: string\n}\n\nexport interface BentoApprovalMessage {\n  warning: string\n  user: string\n  masterContract: string\n  approved: boolean\n  nonce: number\n}\n\nexport const getSignature = (message: Message, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return sign({ types, primaryType: 'LimitOrder', domain, message }, privateKey)\n}\n\nexport const getTypedData = (message: Message, chainId: ChainId) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return { types, primaryType: 'LimitOrder', domain, message }\n}\n\nexport const getTypedDataBento = (message: BentoApprovalMessage, chainId: ChainId) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return {\n    types: bentoTypes,\n    primaryType: 'SetMasterContractApproval',\n    domain,\n    message\n  }\n}\n\nexport const getTypeHash = (typedData: any) => {\n  let message = getMessage(typedData, true).toString('hex')\n  return `0x${message}`\n}\n\nconst sign = (typedData: any, privateKey: string) => {\n  let message = getMessage(typedData, true)\n  const signingKey = new SigningKey(privateKey)\n  const { v, r, s } = signingKey.signDigest(message)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProvider = async (\n  message: Message,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedData(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.maker, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProviderBentobox = async (\n  message: BentoApprovalMessage,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedDataBento(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.user, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureBento = async (bentoApproval: BentoApprovalMessage, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return sign(\n    {\n      types: bentoTypes,\n      primaryType: 'SetMasterContractApproval',\n      domain,\n      message: bentoApproval\n    },\n    privateKey\n  )\n}\n","import { SOLIDITY_TYPE_MAXIMA, SolidityType, ZERO } from '../constants'\n\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n","import { Currency } from './entities/Currency'\nimport { CurrencyAmount } from './entities/CurrencyAmount'\nimport { Percent } from './entities/Percent'\nimport { Token } from './entities/Token'\nimport { Trade } from './entities/Trade'\nimport { TradeType } from './enums/TradeType'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\n  return `0x${currencyAmount.quotient.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(\n    trade: Trade<Currency, Currency, TradeType>,\n    options: TradeOptions | TradeOptionsDeadline\n  ): SwapParameters {\n    const etherIn = trade.inputAmount.currency.isNative\n    const etherOut = trade.outputAmount.currency.isNative\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport {\n  Pool,\n  PoolType,\n  HybridPool,\n  WeightedPool,\n  ConcentratedLiquidityPool,\n  CL_MIN_TICK,\n  CL_MAX_TICK\n} from '../types/MultiRouterTypes'\n\nconst A_PRECISION = 100\n\nconst DCacheBN = new Map<Pool, BigNumber>()\nexport function HybridComputeLiquidity(pool: HybridPool): BigNumber {\n  const res = DCacheBN.get(pool)\n  if (res !== undefined) return res\n\n  const r0 = pool.reserve0\n  const r1 = pool.reserve1\n\n  if (r0.isZero() && r1.isZero()) {\n    DCacheBN.set(pool, BigNumber.from(0))\n    return BigNumber.from(0)\n  }\n  const s = r0.add(r1)\n\n  const nA = BigNumber.from(pool.A * 2)\n\n  let prevD\n\n  let D = s\n  for (let i = 0; i < 256; i++) {\n    const dP = D.mul(D)\n      .div(r0)\n      .mul(D)\n      .div(r1)\n      .div(4)\n    prevD = D\n    D = nA\n      .mul(s)\n      .div(A_PRECISION)\n      .add(dP.mul(2))\n      .mul(D)\n      .div(\n        nA\n          .div(A_PRECISION)\n          .sub(1)\n          .mul(D)\n          .add(dP.mul(3))\n      )\n    if (\n      D.sub(prevD)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  DCacheBN.set(pool, D)\n  return D\n}\n\nexport function HybridgetY(pool: HybridPool, x: BigNumber): BigNumber {\n  const D = HybridComputeLiquidity(pool)\n\n  const nA = pool.A * 2\n\n  let c = D.mul(D)\n    .div(x.mul(2))\n    .mul(D)\n    .div((nA * 2) / A_PRECISION)\n  let b = D.mul(A_PRECISION)\n    .div(nA)\n    .add(x)\n\n  let yPrev\n  let y = D\n  for (let i = 0; i < 256; i++) {\n    yPrev = y\n\n    y = y\n      .mul(y)\n      .add(c)\n      .div(\n        y\n          .mul(2)\n          .add(b)\n          .sub(D)\n      )\n    if (\n      y\n        .sub(yPrev)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  return y\n}\n\nexport function calcOutByIn(pool: Pool, amountIn: number, direction = true): number {\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      return (y * amountIn) / (x / (1 - pool.fee) + amountIn)\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as WeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      const actualIn = amountIn * (1 - pool.fee)\n      const out = y * (1 - Math.pow(x / (x + actualIn), weightRatio))\n      return out\n    }\n    case PoolType.Hybrid: {\n      // const xNew = x + amountIn*(1-pool.fee);\n      // const yNew = HybridgetY(pool, xNew);\n      // const dy = y - yNew;\n\n      const xNewBN = xBN.add(getBigNumber(undefined, amountIn * (1 - pool.fee)))\n      const yNewBN = HybridgetY(pool as HybridPool, xNewBN)\n      const dy = parseInt(yBN.sub(yNewBN).toString())\n\n      return dy\n    }\n    case PoolType.ConcentratedLiquidity: {\n      return ConcentratedLiquidityOutByIn(pool as ConcentratedLiquidityPool, amountIn, direction)\n    }\n  }\n}\n\nexport class OutOfLiquidity extends Error {}\n\nfunction ConcentratedLiquidityOutByIn(pool: ConcentratedLiquidityPool, inAmount: number, direction: boolean) {\n  if (pool.ticks.length === 0) return 0\n  if (pool.ticks[0].index > CL_MIN_TICK) pool.ticks.unshift({ index: CL_MIN_TICK, DLiquidity: 0 })\n  if (pool.ticks[pool.ticks.length - 1].index < CL_MAX_TICK) pool.ticks.push({ index: CL_MAX_TICK, DLiquidity: 0 })\n\n  let nextTickToCross = direction ? pool.nearestTick : pool.nearestTick + 1\n  let currentPrice = pool.sqrtPrice\n  let currentLiquidity = pool.liquidity\n  let outAmount = 0\n  let input = inAmount\n\n  while (input > 0) {\n    if (nextTickToCross < 0 || nextTickToCross >= pool.ticks.length) throw new OutOfLiquidity()\n\n    const nextTickPrice = Math.sqrt(Math.pow(1.0001, pool.ticks[nextTickToCross].index))\n    // console.log('L, P, tick, nextP', currentLiquidity,\n    //     currentPrice, pool.ticks[nextTickToCross].index, nextTickPrice);\n    let output = 0\n\n    if (direction) {\n      const maxDx = (currentLiquidity * (currentPrice - nextTickPrice)) / currentPrice / nextTickPrice\n      //console.log('input, maxDx', input, maxDx);\n\n      if (input <= maxDx) {\n        output = (currentLiquidity * currentPrice * input) / (input + currentLiquidity / currentPrice)\n        input = 0\n      } else {\n        output = currentLiquidity * (currentPrice - nextTickPrice)\n        currentPrice = nextTickPrice\n        input -= maxDx\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross--\n      }\n    } else {\n      const maxDy = currentLiquidity * (nextTickPrice - currentPrice)\n      //console.log('input, maxDy', input, maxDy);\n      if (input <= maxDy) {\n        output = input / currentPrice / (currentPrice + input / currentLiquidity)\n        input = 0\n      } else {\n        output = (currentLiquidity * (nextTickPrice - currentPrice)) / currentPrice / nextTickPrice\n        currentPrice = nextTickPrice\n        input -= maxDy\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross++\n      }\n    }\n\n    outAmount += output * (1 - pool.fee)\n    //console.log('out', outAmount);\n  }\n\n  return outAmount\n}\n\nexport function calcInByOut(pool: Pool, amountOut: number, direction: boolean): number {\n  let input = 0\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      input = (x * amountOut) / (1 - pool.fee) / (y - amountOut)\n      break\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as WeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      input = x * (1 - pool.fee) * (Math.pow(1 - amountOut / y, -weightRatio) - 1)\n      break\n    }\n    case PoolType.Hybrid: {\n      let yNewBN = yBN.sub(getBigNumber(undefined, amountOut))\n      if (yNewBN.lt(1))\n        // lack of precision\n        yNewBN = BigNumber.from(1)\n\n      const xNewBN = HybridgetY(pool as HybridPool, yNewBN)\n      input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - pool.fee))\n\n      // const yNew = y - amountOut;\n      // const xNew = HybridgetY(pool, yNew);\n      // input = (xNew - x)/(1-pool.fee);\n      break\n    }\n    default:\n      console.error('Unknown pool type')\n  }\n\n  // ASSERT(() => {\n  //   const amount2 = calcOutByIn(pool, input, direction);\n  //   const res = closeValues(amountOut, amount2, 1e-6);\n  //   if (!res) console.log(\"Error 138:\", amountOut, amount2, Math.abs(amountOut/amount2 - 1));\n  //   return res;\n  // });\n  if (input < 1) input = 1\n  return input\n}\n\nexport function calcPrice(pool: Pool, amountIn: number): number {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = r0 / (1 - pool.fee)\n      return (r1 * x) / (x + amountIn) / (x + amountIn)\n    }\n    case PoolType.Weighted: {\n      const wPool = pool as WeightedPool\n      const weightRatio = wPool.weight0 / wPool.weight1\n      const x = r0 + amountIn * (1 - pool.fee)\n      return (r1 * weightRatio * (1 - pool.fee) * Math.pow(r0 / x, weightRatio)) / x\n    }\n    case PoolType.Hybrid: {\n      const hPool = pool as HybridPool\n      const D = parseInt(HybridComputeLiquidity(hPool).toString())\n      const A = hPool.A / A_PRECISION\n      const x = r0 + amountIn\n      const b = 4 * A * x + D - 4 * A * D\n      const ac4 = (D * D * D) / x\n      const Ds = Math.sqrt(b * b + 4 * A * ac4)\n      const res = (0.5 - (2 * b - ac4 / x) / Ds / 4) * (1 - pool.fee)\n      return res\n    }\n  }\n  return 0\n}\n\nfunction calcInputByPriceConstantMean(pool: WeightedPool, price: number) {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  const weightRatio = pool.weight0 / pool.weight1\n  const t = r1 * price * weightRatio * (1 - pool.fee) * Math.pow(r0, weightRatio)\n  return (Math.pow(t, 1 / (weightRatio + 1)) - r0) / (1 - pool.fee)\n}\n\nexport function calcInputByPrice(pool: Pool, priceEffective: number, hint = 1): number {\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const r0 = parseInt(pool.reserve0.toString())\n      const r1 = parseInt(pool.reserve1.toString())\n      const x = r0 / (1 - pool.fee)\n      const res = Math.sqrt(r1 * x * priceEffective) - x\n      return res\n    }\n    case PoolType.Weighted: {\n      const res = calcInputByPriceConstantMean(pool as WeightedPool, priceEffective)\n      return res\n    }\n    case PoolType.Hybrid: {\n      return revertPositive((x: number) => 1 / calcPrice(pool, x), priceEffective, hint)\n    }\n  }\n  return 0\n}\n\n//================================= Utils ====================================\n\nexport function ASSERT(f: () => boolean, t?: string) {\n  if (!f() && t) console.error(t)\n}\n\nexport function closeValues(a: number, b: number, accuracy: number): boolean {\n  if (accuracy === 0) return a === b\n  if (a < 1 / accuracy) return Math.abs(a - b) <= 10\n  return Math.abs(a / b - 1) < accuracy\n}\n\nexport function calcSquareEquation(a: number, b: number, c: number): [number, number] {\n  const D = b * b - 4 * a * c\n  console.assert(D >= 0, `Discriminant is negative! ${a} ${b} ${c}`)\n  const sqrtD = Math.sqrt(D)\n  return [(-b - sqrtD) / 2 / a, (-b + sqrtD) / 2 / a]\n}\n\n// returns such x > 0 that f(x) = out or 0 if there is no such x or f defined not everywhere\n// hint - approximation of x to spead up the algorithm\n// f assumed to be continues monotone growth function defined everywhere\nexport function revertPositive(f: (x: number) => number, out: number, hint = 1) {\n  try {\n    if (out <= f(0)) return 0\n    let min, max\n    if (f(hint) > out) {\n      min = hint / 2\n      while (f(min) > out) min /= 2\n      max = min * 2\n    } else {\n      max = hint * 2\n      while (f(max) < out) max *= 2\n      min = max / 2\n    }\n\n    while (max / min - 1 > 1e-4) {\n      const x0: number = (min + max) / 2\n      const y0 = f(x0)\n      if (out === y0) return x0\n      if (out < y0) max = x0\n      else min = x0\n    }\n    return (min + max) / 2\n  } catch (e) {\n    return 0\n  }\n}\n\nexport function getBigNumber(valueBN: BigNumber | undefined, value: number): BigNumber {\n  if (valueBN !== undefined) return valueBN\n\n  if (value < Number.MAX_SAFE_INTEGER) return BigNumber.from(Math.round(value))\n\n  const exp = Math.floor(Math.log(value) / Math.LN2)\n  console.assert(exp >= 51, 'Internal Error 314')\n  const shift = exp - 51\n  const mant = Math.round(value / Math.pow(2, shift))\n  const res = BigNumber.from(mant).mul(BigNumber.from(2).pow(shift))\n  return res\n}\n","import { CurrencyAmount, Price, Token } from './entities'\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from './constants'\nimport { Message, getSignature, getSignatureWithProvider, getTypeHash, getTypedData } from './entities'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId } from './enums'\nimport { Contract } from '@ethersproject/contracts'\nimport { NonceManager } from '@ethersproject/experimental'\nimport { Signer } from '@ethersproject/abstract-signer'\nimport { Transaction } from '@ethersproject/transactions'\nimport { Web3Provider } from '@ethersproject/providers'\nimport abi from './abis/StopLimitOrder.json'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport fetch from 'isomorphic-unfetch'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\nexport interface ILimitOrderData {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  tokenInDecimals: number\n  tokenOutDecimals: number\n  tokenInSymbol: string\n  tokenOutSymbol: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string | number\n  endTime: string | number\n  stopPrice?: string\n  oracleAddress?: string\n  oracleData?: string\n  v: number\n  r: string\n  s: string\n  chainId: ChainId\n  orderTypeHash?: string\n}\n\nexport class LimitOrder {\n  public readonly maker: string\n  public readonly amountIn: CurrencyAmount<Token>\n  public readonly amountOut: CurrencyAmount<Token>\n  public readonly recipient: string\n  public readonly startTime: string\n  public readonly endTime: string\n  public readonly stopPrice: string\n  public readonly oracleAddress: string\n  public readonly oracleData: string\n  public v: number\n  public r: string\n  public s: string\n\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\n    return new LimitOrder(\n      data.maker,\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenIn, data.tokenInDecimals, data.tokenInSymbol),\n        data.amountIn\n      ),\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenOut, data.tokenOutDecimals, data.tokenOutSymbol),\n        data.amountOut\n      ),\n      data.recipient,\n      data.startTime,\n      data.endTime,\n      data.stopPrice,\n      data.oracleAddress,\n      data.oracleData,\n      data.v,\n      data.r,\n      data.s\n    )\n  }\n\n  constructor(\n    maker: string,\n    amountIn: CurrencyAmount<Token>,\n    amountOut: CurrencyAmount<Token>,\n    recipient: string,\n    startTime: string | number,\n    endTime: string | number,\n    stopPrice = '0',\n    oracleAddress = '0x0000000000000000000000000000000000000000',\n    oracleData = '0x00000000000000000000000000000000000000000000000000000000000000',\n    v = 0,\n    r = '',\n    s = ''\n  ) {\n    this.maker = validateAndParseAddress(maker)\n    this.amountIn = amountIn\n    this.amountOut = amountOut\n    this.recipient = validateAndParseAddress(recipient)\n    this.startTime = startTime.toString()\n    this.endTime = endTime.toString()\n    this.stopPrice = stopPrice\n    this.oracleAddress = validateAndParseAddress(oracleAddress)\n    this.oracleData = oracleData\n    this.v = v\n    this.r = r\n    this.s = s\n  }\n\n  get amountInRaw(): string {\n    return this.amountIn.quotient.toString()\n  }\n\n  get amountOutRaw(): string {\n    return this.amountOut.quotient.toString()\n  }\n\n  get tokenInAddress(): string {\n    return this.amountIn.currency.address\n  }\n\n  get tokenOutAddress(): string {\n    return this.amountOut.currency.address\n  }\n\n  get tokenInDecimals(): number {\n    return this.amountIn.currency.decimals\n  }\n\n  get tokenOutDecimals(): number {\n    return this.amountOut.currency.decimals\n  }\n\n  get tokenInSymbol(): string {\n    return this.amountIn.currency.symbol || ''\n  }\n\n  get tokenOutSymbol(): string {\n    return this.amountOut.currency.symbol || ''\n  }\n\n  get chainId(): ChainId {\n    return this.amountIn.currency.chainId\n  }\n\n  usePrice(price: Price<Token, Token>): LimitOrder {\n    return new LimitOrder(\n      this.maker,\n      this.amountIn,\n      CurrencyAmount.fromRawAmount(this.amountOut.currency, price.quote(this.amountIn).quotient.toString()),\n      this.recipient,\n      this.startTime,\n      this.endTime,\n      this.stopPrice,\n      this.oracleAddress,\n      this.oracleData\n    )\n  }\n\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = getSignature(order, chainId, privateKey)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = await getSignatureWithProvider(order, chainId, provider)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  getTypedData() {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    return getTypedData(order, this.chainId)\n  }\n\n  getTypeHash() {\n    let typedData = this.getTypedData()\n    let digest = getTypeHash(typedData)\n    return digest\n  }\n\n  async send() {\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\n      method: 'POST',\n      body: JSON.stringify({\n        maker: this.maker,\n        tokenIn: this.tokenInAddress,\n        tokenOut: this.tokenOutAddress,\n        tokenInDecimals: this.tokenInDecimals,\n        tokenOutDecimals: this.tokenOutDecimals,\n        tokenInSymbol: this.tokenInSymbol,\n        tokenOutSymbol: this.tokenOutSymbol,\n        amountIn: this.amountInRaw,\n        amountOut: this.amountOutRaw,\n        recipient: this.recipient,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        stopPrice: this.stopPrice,\n        oracleAddress: this.oracleAddress,\n        oracleData: this.oracleData,\n        v: this.v,\n        r: this.r,\n        s: this.s,\n        chainId: this.amountIn.currency.chainId\n      })\n    })\n\n    return resp.json()\n  }\n}\n\nexport class FillLimitOrder {\n  public readonly order: LimitOrder\n  public readonly path: string[]\n  public readonly amountExternal: BigNumber\n  public readonly amountToFill: BigNumber\n  public readonly limitOrderReceiver: string\n  public readonly to: string\n  public readonly tokenIn: string\n  public readonly tokenOut: string\n  public readonly limitOrderReceiverData: string\n\n  constructor(\n    order: LimitOrder,\n    path: string[],\n    amountExternal: BigNumber,\n    amountToFill: BigNumber,\n    limitOrderReceiver: string,\n    to: string,\n    keepTokenIn = false\n  ) {\n    this.order = order\n    this.path = path.map(validateAndParseAddress)\n    this.amountExternal = amountExternal\n    this.amountToFill = amountToFill\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver)\n    this.to = validateAndParseAddress(to)\n    this.tokenIn = order.amountIn.currency.address\n    this.tokenOut = order.amountOut.currency.address\n\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\n      ['address[]', 'uint256', 'address', 'bool'],\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\n    )\n  }\n\n  public fillOrderOpen(\n    signer: Signer,\n    extra: {\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      nonce?: number\n      debug?: boolean\n      open?: boolean\n    }\n  ) {\n    extra.open = true\n    return this.fillOrder(signer, extra)\n  }\n\n  public async fillOrder(\n    signer: Signer | NonceManager,\n    extra: {\n      debug?: boolean\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      open?: boolean\n      nonce?: number\n    }\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra\n\n    const func = open ? 'fillOrderOpen' : 'fillOrder'\n\n    const orderArg = [\n      this.order.maker,\n      this.order.amountInRaw,\n      this.order.amountOutRaw,\n      this.order.recipient,\n      this.order.startTime,\n      this.order.endTime,\n      this.order.stopPrice,\n      this.order.oracleAddress,\n      this.order.oracleData,\n      this.amountToFill.toString(),\n      this.order.v,\n      this.order.r,\n      this.order.s\n    ]\n\n    const limitOrderContract = new Contract(STOP_LIMIT_ORDER_ADDRESS[this.order.chainId], abi, signer)\n\n    let gasLimit\n    let executed = true\n\n    if (extra.debug) console.log(orderArg, this.path, this.limitOrderReceiver, this.limitOrderReceiverData)\n\n    try {\n      gasLimit = await limitOrderContract.estimateGas[func](\n        orderArg,\n        this.path[0],\n        this.path[this.path.length - 1],\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      )\n      gasLimit = gasLimit.mul(11).div(10)\n    } catch (e) {\n      if (forceExecution) {\n        console.log('Failed to estimate gas, forcing execution')\n        gasLimit = BigNumber.from('400000') // 400k\n        executed = true\n      } else {\n        return { executed: false }\n      }\n    }\n\n    const transaction: Transaction = await limitOrderContract.fillOrder(\n      orderArg,\n      this.path[0],\n      this.path[this.path.length - 1],\n      this.limitOrderReceiver,\n      this.limitOrderReceiverData,\n      { gasLimit, gasPrice, nonce }\n    )\n\n    return { executed, transaction }\n  }\n}\n"],"names":["ChainId","Rounding","TradeType","KashiAction","Fee","OrderStatus","USDC_ADDRESS","MAINNET","ROPSTEN","KOVAN","MATIC","FANTOM","BSC","HARMONY","HECO","OKEX","XDAI","FACTORY_ADDRESS","RINKEBY","GÖRLI","FANTOM_TESTNET","MATIC_TESTNET","BSC_TESTNET","ARBITRUM","ARBITRUM_TESTNET","MOONBEAM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","OKEX_TESTNET","CELO","PALM","PALM_TESTNET","ROUTER_ADDRESS","SUSHI_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","SUSHISWAP_TWAP_0_ORACLE_ADDRESS","SUSHISWAP_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","STOP_LIMIT_ORDER_ADDRESS","ARCHER_ROUTER_ADDRESS","MINICHEF_ADDRESS","WETH9_ADDRESS","WNATIVE_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","ACTION_ADD_ASSET","ACTION_REPAY","ACTION_REMOVE_ASSET","ACTION_REMOVE_COLLATERAL","ACTION_BORROW","ACTION_GET_REPAY_SHARE","ACTION_GET_REPAY_PART","ACTION_ACCRUE","ACTION_ADD_COLLATERAL","ACTION_UPDATE_EXCHANGE_RATE","ACTION_BENTO_DEPOSIT","ACTION_BENTO_WITHDRAW","ACTION_BENTO_TRANSFER","ACTION_BENTO_TRANSFER_MULTIPLE","ACTION_BENTO_SETAPPROVAL","ACTION_CALL","MINIMUM_TARGET_UTILIZATION","BigNumber","from","MAXIMUM_TARGET_UTILIZATION","UTILIZATION_PRECISION","FULL_UTILIZATION","FULL_UTILIZATION_MINUS_MAX","sub","STARTING_INTEREST_PER_YEAR","mul","MINIMUM_INTEREST_PER_YEAR","MAXIMUM_INTEREST_PER_YEAR","INTEREST_ELASTICITY","FACTOR_PRECISION","PROTOCOL_FEE","PROTOCOL_FEE_DIVISOR","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","USDC","WETH9","WNATIVE","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Okex","xDai","Palm","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","LAMBDA_URL","SOCKET_URL","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePairAddress","factoryAddress","tokenA","tokenB","token0","token1","getCreate2Address","keccak256","pack","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","Pair","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","i","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","a","b","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","undefined","PoolType","Pool","_info","info","minLiquidity","swapGasCost","type","fee","ConstantProductPool","ConstantProduct","HybridPool","Hybrid","A","WeightedPool","Weighted","weight0","weight1","CL_MIN_TICK","CL_MAX_TICK","ConcentratedLiquidityPool","ConcentratedLiquidity","sqrtPrice","nearestTick","ticks","RouteStatus","types","EIP712Domain","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","privateKey","domain","verifyingContract","sign","primaryType","getTypedData","getTypedDataBento","getTypeHash","typedData","getMessage","signingKey","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","signature","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","A_PRECISION","DCacheBN","Map","HybridComputeLiquidity","pool","res","get","r0","r1","isZero","nA","prevD","D","dP","abs","lte","HybridgetY","c","yPrev","y","calcOutByIn","direction","xBN","yBN","parseInt","wPool","weightRatio","actualIn","out","pow","xNewBN","getBigNumber","yNewBN","dy","ConcentratedLiquidityOutByIn","OutOfLiquidity","inAmount","index","unshift","DLiquidity","nextTickToCross","currentPrice","currentLiquidity","outAmount","nextTickPrice","maxDx","maxDy","calcInByOut","lt","round","console","calcPrice","hPool","ac4","Ds","calcInputByPriceConstantMean","price","t","calcInputByPrice","priceEffective","hint","revertPositive","ASSERT","f","closeValues","accuracy","calcSquareEquation","assert","sqrtD","min","max","x0","y0","e","valueBN","exp","log","LN2","shift","mant","startTime","endTime","stopPrice","oracleAddress","oracleData","getLimitOrder","data","tokenInDecimals","tokenInSymbol","tokenOutDecimals","tokenOutSymbol","usePrice","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","signOrderWithProvider","digest","fetch","method","body","resp","json","FillLimitOrder","amountExternal","amountToFill","limitOrderReceiver","keepTokenIn","limitOrderReceiverData","defaultAbiCoder","encode","fillOrderOpen","signer","extra","open","fillOrder","gasPrice","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","estimateGas","gasLimit","transaction"],"mappings":"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"}